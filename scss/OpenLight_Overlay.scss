@import "./variablesLight.scss";
@import "./_mixins.scss";

* {
    color: $primaryText;
    background-color: $primaryBackground;
    alternate-background-color: $secondaryBackground;//rgba(134,142,150,0.5);
  }
  
  QTabWidget::pane {
    background-color: transparent;
    border: transparent;
  }
  
  /* The OverlayTabWidget is named as OverlayLeft, OverlayRight, OverlayTop, OverlayBottom.
  To customize for each overlay docking site, use the following selector
  
  Gui--OverlayTabWidget#OverlayLeft {}
  */
  
  Gui--OverlayTabWidget {
    qproperty-effectColor: rgba(33,37,41,50);
    qproperty-effectBlurRadius: 10.0;
    qproperty-effectOffsetX: 0.0;
    qproperty-effectOffsetY: 0.0;
    qproperty-effectWidth: 1;
    qproperty-effectHeight: 1;
    qproperty-enableEffect: 1;
  }
  
  Gui--OverlayTabWidget::pane {
    background-color: transparent;
  }
  
  QHeaderView { background:transparent }
  QHeaderView::section {
    color: $primaryText;
    background-color: #dee2e6;//rgba(10.2,11.8,13.3,32);
    padding: 2px;
    padding-left: 8px;
    border: 1px solid $contrastBorder;
  }
  
  Gui--OverlayToolButton {
    background-color: transparent;
    padding: 0px;
    border: none;
  }
  
  Gui--OverlayToolButton::hover {
    background: $primaryBackground;
  }
 

  QListView {
    background-color: $secondaryBackground;
    &::indicator {
      border-radius: 2px;
      border-color: $contrastBorder
    }
  }
  
  QListView::item,
  QTreeView::item  {
    margin: 3px 0px;
    border: 1px solid transparent;
    border-radius: 2px;
    background-color: $secondaryBackground;
  }

  QListView::item:hover,
  QTreeView::item:hover  {
    border: 1px solid $contrastBorder;
    background-color: $controlWidgetBackground;
  }

  QListView::item:selected,
  QTreeView::item:selected  {
    border: 1px solid $accentBorder;
    background-color: $accentBackground;
  }
  
  Gui--PropertyEditor--PropertyEditor {
    qproperty-groupTextColor:  $primaryText;
    qproperty-groupBackground: $standardBorder;
    qproperty-itemBackground: #00ff00;
  }
  
  Gui--CallTipsList::item {
    background-color: $primaryBackground; //rgba(100, 100, 100, 200);
  }
  
  Gui--CallTipsList::item::selected {
    color: $inverseText;
    background-color: $accentBackground; //rgb(94, 144, 250);
    border: 1px solid $accentBorder;
    &:hover {
      background-color: $standardBorder;
      border: 1px solid $accentBorder;
    }
  }
  
  /* Use the following selector to customize title bar for each side */
  /*
  Gui--OverlayTabWidget#OverlayBottom Gui--OverlayTitleBar,
  Gui--OverlayTabWidget#OverlayBottom QSplitter Gui--OverlaySplitterHandle {
    background-color: qlineargradient(
      spread:pad, x1:0, y1:1, x2:0, y2:0,
      stop:0 #80202020, stop:1 #00202020);
  }
  */
  
  Gui--OverlayTitleBar,
  Gui--OverlaySplitterHandle {
    background-color: rgba(185,192,197,0.75);
  }
  
  QScrollArea#ClippingScrollArea,
  QWidget#ClippingScrollAreaContents {
    background-color: #ff00ff;
  }
  
  QSint--ActionGroup QFrame[class="content"] {
    background-color: $secondaryBackground; /* Task Panel background color */
  }
  
  QSint--ActionGroup QFrame[class="content"] > QWidget {
    background-color: $primaryBackground; /* Task Panel background color */
  }

  QComboBox QAbstractItemView {
    background-color: $secondaryBackground;
  }

  // QAbstractSpinBox {
  //   margin: 3px 6px 3px 6px; }
  
  QTreeView::indicator {
    border: 1px solid $contrastBorder; }
  
  QTreeView::indicator:checked {
    image: url(qss:images_dark-light/check_dark.svg); }